{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Than Htut Aung/Desktop/next-pj/pages/[meetupId]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  const {\n    isFallback\n  } = useRouter();\n\n  if (isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, _objectSpread({}, props.meetupData), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://thanhtut_28:kingkong44110@cluster0.jhbra.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //     {\n    //         params: {\n    //             meetupId: 'm1',\n    //         },\n    //     },\n    //     {\n    //         params: {\n    //             meetupId: 'm2',\n    //         },\n    //     },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  const {\n    meetupId\n  } = context.params;\n  const client = await MongoClient.connect('mongodb+srv://thanhtut_28:kingkong44110@cluster0.jhbra.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  }); // console.log(selectedMeetup);\n\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      },\n      [meetupData.title]: selectedMeetup.title,\n      description: selectedMeetup.description\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/mnt/c/Users/Than Htut Aung/Desktop/next-pj/pages/[meetupId]/index.js"],"names":["useRouter","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","isFallback","meetupData","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id","title","address","image","description"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,SAAS,EAAhC;;AAEA,MAAIM,UAAJ,EAAgB;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBAAO,QAAC,YAAD,oBAAkBD,KAAK,CAACE,UAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CARD;;AAUA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACjB,wGADiB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADkB,KAAL,CAAlB,CAFJ,CAQH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnBG,GAAP;AAqBH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAM;AAAEH,IAAAA;AAAF,MAAeG,OAAO,CAACJ,MAA7B;AAEA,QAAMd,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACjB,wGADiB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEd,QAAQ,CAACsB,QAAD;AAAf,GAA1B,CAA7B,CAX0C,CAY1C;;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHb,IAAAA,KAAK,EAAE;AACHE,MAAAA,UAAU,EAAE;AACRuB,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADI;AAERM,QAAAA,KAAK,EAAEH,cAAc,CAACG,KAFd;AAGRC,QAAAA,OAAO,EAAEJ,cAAc,CAACI,OAHhB;AAIRC,QAAAA,KAAK,EAAEL,cAAc,CAACK,KAJd;AAKRC,QAAAA,WAAW,EAAEN,cAAc,CAACM;AALpB,OADT;AAQH,OAAC3B,UAAU,CAACwB,KAAZ,GAAoBH,cAAc,CAACG,KARhC;AASHG,MAAAA,WAAW,EAAEN,cAAc,CAACM;AATzB;AADJ,GAAP;AAaH;AAED,eAAe9B,aAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = props => {\r\n    const { isFallback } = useRouter();\r\n\r\n    if (isFallback) {\r\n        return <p>...Loading</p>;\r\n    }\r\n\r\n    return <MeetupDetail {...props.meetupData} />;\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://thanhtut_28:kingkong44110@cluster0.jhbra.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: {\r\n                meetupId: meetup._id.toString(),\r\n            },\r\n        })),\r\n\r\n        // [\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm1',\r\n        //         },\r\n        //     },\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm2',\r\n        //         },\r\n        //     },\r\n        // ],\r\n    };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const { meetupId } = context.params;\r\n\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://thanhtut_28:kingkong44110@cluster0.jhbra.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n    // console.log(selectedMeetup);\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                description: selectedMeetup.description,\r\n            },\r\n            [meetupData.title]: selectedMeetup.title,\r\n            description: selectedMeetup.description,\r\n        },\r\n    };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}
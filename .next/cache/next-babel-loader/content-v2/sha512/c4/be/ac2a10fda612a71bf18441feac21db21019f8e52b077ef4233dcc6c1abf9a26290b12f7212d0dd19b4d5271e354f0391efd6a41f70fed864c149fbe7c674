{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/Than Htut Aung/Desktop/next-pj/pages/[meetupId]/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  _s();\n\n  var _useRouter = useRouter(),\n      isFallback = _useRouter.isFallback;\n\n  if (isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MeetupDetails, \"Ch/bV+mPq0h+JIhwQrjzTmaO/YQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/mnt/c/Users/Than Htut Aung/Desktop/next-pj/pages/[meetupId]/index.js"],"names":["useRouter","MeetupDetail","MeetupDetails","props","isFallback","meetupData","image","title","address","description"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA;;AAAA,mBACJH,SAAS,EADL;AAAA,MACnBI,UADmB,cACnBA,UADmB;;AAG3B,MAAIA,UAAJ,EAAgB;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAED,KAAK,CAACE,UAAN,CAAiBC,KAD5B;AAEI,IAAA,KAAK,EAAEH,KAAK,CAACE,UAAN,CAAiBE,KAF5B;AAGI,IAAA,OAAO,EAAEJ,KAAK,CAACE,UAAN,CAAiBG,OAH9B;AAII,IAAA,WAAW,EAAEL,KAAK,CAACE,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAfD;;GAAMP,a;UACqBF,S;;;KADrBE,a;;AAkFN,eAAeA,aAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = props => {\r\n    const { isFallback } = useRouter();\r\n\r\n    if (isFallback) {\r\n        return <p>...Loading</p>;\r\n    }\r\n\r\n    return (\r\n        <MeetupDetail\r\n            image={props.meetupData.image}\r\n            title={props.meetupData.title}\r\n            address={props.meetupData.address}\r\n            description={props.meetupData.description}\r\n        />\r\n    );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://thanhtut_28:kingkong44110@cluster0.hzpcr.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: {\r\n                meetupId: meetup._id.toString(),\r\n            },\r\n        })),\r\n\r\n        // [\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm1',\r\n        //         },\r\n        //     },\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm2',\r\n        //         },\r\n        //     },\r\n        // ],\r\n    };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const { meetupId } = context.params;\r\n\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://thanhtut_28:kingkong44110@cluster0.hzpcr.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n    console.log(selectedMeetup + 'selected Meetup');\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                description: selectedMeetup.description,\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}
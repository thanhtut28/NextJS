{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Than Htut Aung/Desktop/next-pj/pages/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 5, 12345 Some City',\n  description: 'This is a first meetup!'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 10, 12345 Some City',\n  description: 'This is a second meetup!'\n}];\n\nfunction HomePage({\n  meetups\n}) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n} //* only executes in build-time, neither on server side nor especially on client side.\n\n\nexport async function getStaticProps() {\n  // const res = await fetch(`url`);\n  // const meetups = await res.json();\n  const client = await MongoClient.connect('mongodb+srv://thanhtut_28:kingkong44110@cluster0.hzpcr.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray(); // find method finds all of the documents\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    }\n  };\n} //* only executes in server side.\n// export async function getServerSideProps(context) {\n//     //fetch data from server\n//     const { req, res } = context;\n//     console.log(req);\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS,\n//         },\n//     };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["/mnt/c/Users/Than Htut Aung/Desktop/next-pj/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","props","map","meetup","_id","toString"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EACD,wHAJR;AAKIC,EAAAA,OAAO,EAAE,iCALb;AAMIC,EAAAA,WAAW,EAAE;AANjB,CADkB,EASlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,iBAFX;AAGIC,EAAAA,KAAK,EACD,wHAJR;AAKIC,EAAAA,OAAO,EAAE,kCALb;AAMIC,EAAAA,WAAW,EAAE;AANjB,CATkB,CAAtB;;AAmBA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAC3B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,C,CAED;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA;AACA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,wGADiB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB,CAXmC,CAWuB;;AAE1DN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHV,MAAAA,OAAO,EAAEA,OAAO,CAACW,GAAR,CAAYC,MAAM,KAAK;AAC5BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADc;AAE5BE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFY;AAG5BD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHc;AAI5BF,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJwB,OAAL,CAAlB;AADN;AADJ,GAAP;AAUH,C,CAED;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAef,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport MeetupList from '../components/meetups/MeetupList';\r\n\r\nconst DUMMY_MEETUPS = [\r\n    {\r\n        id: 'm1',\r\n        title: 'A First Meetup',\r\n        image:\r\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        address: 'Some address 5, 12345 Some City',\r\n        description: 'This is a first meetup!',\r\n    },\r\n    {\r\n        id: 'm2',\r\n        title: 'A Second Meetup',\r\n        image:\r\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        address: 'Some address 10, 12345 Some City',\r\n        description: 'This is a second meetup!',\r\n    },\r\n];\r\n\r\nfunction HomePage({ meetups }) {\r\n    return <MeetupList meetups={meetups} />;\r\n}\r\n\r\n//* only executes in build-time, neither on server side nor especially on client side.\r\nexport async function getStaticProps() {\r\n    // const res = await fetch(`url`);\r\n    // const meetups = await res.json();\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://thanhtut_28:kingkong44110@cluster0.hzpcr.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find().toArray(); // find method finds all of the documents\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetups: meetups.map(meetup => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                id: meetup._id.toString(),\r\n            })),\r\n        },\r\n    };\r\n}\r\n\r\n//* only executes in server side.\r\n// export async function getServerSideProps(context) {\r\n//     //fetch data from server\r\n\r\n//     const { req, res } = context;\r\n//     console.log(req);\r\n\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS,\r\n//         },\r\n//     };\r\n// }\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}